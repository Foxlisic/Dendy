;
; File generated by cc65 v 2.18 - Ubuntu 2.19-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.19-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_NMI_flag
	.export		_frame_count
	.export		_index
	.export		_curSymbol
	.export		_TEXT
	.export		_PALLETE
	.export		_disablePPU
	.export		_enablePPU
	.export		_loadPallete
	.export		_loadText
	.export		_resetScroll
	.export		_main

.segment	"RODATA"

_TEXT:
	.byte	$52,$45,$54,$52,$4F,$20,$43,$4F,$44,$45,$00
_PALLETE:
	.byte	$0F
	.byte	$00
	.byte	$10
	.byte	$20

.segment	"BSS"

_NMI_flag:
	.res	1,$00
_frame_count:
	.res	1,$00
_index:
	.res	1,$00
_curSymbol:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ disablePPU (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_disablePPU: near

.segment	"CODE"

	ldx     #$00
	lda     #$00
	sta     $2000
	ldx     #$00
	lda     #$00
	sta     $2001
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ enablePPU (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_enablePPU: near

.segment	"CODE"

	ldx     #$00
	lda     #$90
	sta     $2000
	ldx     #$00
	lda     #$1E
	sta     $2001
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ loadPallete (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_loadPallete: near

.segment	"CODE"

	ldx     #$00
	lda     #$3F
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     _index
L001B:	ldx     #$00
	lda     _index
	cmp     #$04
	jsr     boolult
	jne     L001E
	jmp     L001C
L001E:	lda     #<(_PALLETE)
	ldx     #>(_PALLETE)
	clc
	adc     _index
	bcc     L0028
	inx
L0028:	ldy     #$00
	jsr     ldauidx
	sta     $2007
	ldx     #$00
	inc     _index
	lda     _index
	jmp     L001B
L001C:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ loadText (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_loadText: near

.segment	"CODE"

	ldx     #$00
	lda     _curSymbol
	cmp     #$0B
	jsr     boolult
	jeq     L002A
	ldx     #$00
	lda     #$21
	sta     $2006
	ldx     #$00
	lda     _curSymbol
	ldy     #$CA
	jsr     incaxy
	ldx     #$00
	sta     $2006
	lda     #<(_TEXT)
	ldx     #>(_TEXT)
	clc
	adc     _curSymbol
	bcc     L0037
	inx
L0037:	ldy     #$00
	jsr     ldauidx
	sta     $2007
	ldx     #$00
	inc     _curSymbol
	lda     _curSymbol
	jmp     L0043
L002A:	ldx     #$00
	lda     #$00
	sta     _curSymbol
	ldx     #$00
	lda     #$21
	sta     $2006
	ldx     #$00
	lda     #$CA
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     _index
L0042:	ldx     #$00
	lda     _index
	cmp     #$0B
	jsr     boolult
	jne     L0045
	jmp     L0043
L0045:	ldx     #$00
	lda     #$00
	sta     $2007
	ldx     #$00
	inc     _index
	lda     _index
	jmp     L0042
L0043:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ resetScroll (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_resetScroll: near

.segment	"CODE"

	ldx     #$00
	lda     #$00
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2005
	ldx     #$00
	lda     #$00
	sta     $2005
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     _disablePPU
	jsr     _loadPallete
	jsr     _resetScroll
	jsr     _enablePPU
	jmp     L006A
L0060:	jmp     L0064
L0064:	ldx     #$00
	lda     _NMI_flag
	cmp     #$00
	jsr     booleq
	jne     L0064
	ldx     #$00
	lda     #$00
	sta     _NMI_flag
	ldx     #$00
	lda     _frame_count
	cmp     #$1E
	jsr     booleq
	jeq     L006A
	jsr     _loadText
	jsr     _resetScroll
	ldx     #$00
	lda     #$00
	sta     _frame_count
L006A:	jmp     L0060
	rts

.endproc

